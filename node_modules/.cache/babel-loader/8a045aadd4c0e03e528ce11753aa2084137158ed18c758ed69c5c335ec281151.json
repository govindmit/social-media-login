{"ast":null,"code":"import * as Yup from \"yup\";\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[ -\\/:-@\\[-\\`{-~]).{8,}$/;\nconst emailRules = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\nexport const userRegisterValidations = Yup.object({\n  first_name: Yup.string().required('First name is a required field').min(3, \"First name must be at least 3 characters\").matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\n  last_name: Yup.string().required('Last name is a required field').min(3, \"Last name must be at least 3 characters\").matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\n  email: Yup.string().required('Email is a required field').matches(emailRules, \"Email must be a valid email\").email(\"Email must be a valid email\"),\n  password: Yup.string().required('Password is a required field').min(8, 'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special character').matches(passwordRules, {\n    message: \"Password must have at least one of each: uppercase, lowercase, number and special character\"\n  }),\n  confirm_password: Yup.string().required('Confirm password is a required field').min(8, 'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special character').matches(passwordRules, {\n    message: \"Password must have at least one of each: uppercase, lowercase, number and special character\"\n  }).oneOf([Yup.ref(\"password\"), ''], \"Passwords must match\").required(\"Required\")\n});","map":{"version":3,"names":["Yup","passwordRules","emailRules","userRegisterValidations","object","first_name","string","required","min","matches","last_name","email","password","message","confirm_password","oneOf","ref"],"sources":["/home/devendra/my-form-app/src/validations/registerValidation.js"],"sourcesContent":["import * as Yup from \"yup\";\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[ -\\/:-@\\[-\\`{-~]).{8,}$/;\nconst emailRules = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const userRegisterValidations = Yup.object({\n    first_name: \n        Yup.string().required('First name is a required field')\n        .min(3,\"First name must be at least 3 characters\")\n        .matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\n    last_name: \n        Yup.string().required('Last name is a required field')\n        .min(3,\"Last name must be at least 3 characters\")\n        .matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\n    email: \n        Yup.string().required('Email is a required field')\n        .matches(emailRules,\"Email must be a valid email\")\n        .email(\"Email must be a valid email\"),\n    password: \n        Yup.string().required('Password is a required field')\n        .min(8,'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special character')\n        .matches(passwordRules, { message: \"Password must have at least one of each: uppercase, lowercase, number and special character\" }),\n    confirm_password: \n        Yup.string().required('Confirm password is a required field')\n        .min(8,'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special character')\n        .matches(passwordRules, { message: \"Password must have at least one of each: uppercase, lowercase, number and special character\" })\n        .oneOf([Yup.ref(\"password\"), ''], \"Passwords must match\")\n        .required(\"Required\"),\n  });"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,KAAK;AAE1B,MAAMC,aAAa,GAAG,8DAA8D;AACpF,MAAMC,UAAU,GAAG,+CAA+C;AAElE,OAAO,MAAMC,uBAAuB,GAAGH,GAAG,CAACI,MAAM,CAAC;EAC9CC,UAAU,EACNL,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,gCAAgC,CAAC,CACtDC,GAAG,CAAC,CAAC,EAAC,0CAA0C,CAAC,CACjDC,OAAO,CAAC,cAAc,EAAE,yBAAyB,CAAC;EACvDC,SAAS,EACLV,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,+BAA+B,CAAC,CACrDC,GAAG,CAAC,CAAC,EAAC,yCAAyC,CAAC,CAChDC,OAAO,CAAC,cAAc,EAAE,yBAAyB,CAAC;EACvDE,KAAK,EACDX,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,2BAA2B,CAAC,CACjDE,OAAO,CAACP,UAAU,EAAC,6BAA6B,CAAC,CACjDS,KAAK,CAAC,6BAA6B,CAAC;EACzCC,QAAQ,EACJZ,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,8BAA8B,CAAC,CACpDC,GAAG,CAAC,CAAC,EAAC,0HAA0H,CAAC,CACjIC,OAAO,CAACR,aAAa,EAAE;IAAEY,OAAO,EAAE;EAA8F,CAAC,CAAC;EACvIC,gBAAgB,EACZd,GAAG,CAACM,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,sCAAsC,CAAC,CAC5DC,GAAG,CAAC,CAAC,EAAC,0HAA0H,CAAC,CACjIC,OAAO,CAACR,aAAa,EAAE;IAAEY,OAAO,EAAE;EAA8F,CAAC,CAAC,CAClIE,KAAK,CAAC,CAACf,GAAG,CAACgB,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,CAAC,EAAE,sBAAsB,CAAC,CACxDT,QAAQ,CAAC,UAAU;AAC1B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}