{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { googleLogout } from \"@react-oauth/google\";\nimport { authHeader } from \"../../../common/authTokens\";\nimport { API } from \"../../Config/config\";\nexport const HandleRegister = async reqData => {\n  return await axios({\n    method: \"POST\",\n    url: `${API.register}`,\n    data: reqData,\n    headers: authHeader()\n  }).then(request => {\n    var _request$data;\n    // toast.success(\"User added\")\n    // console.log(request,\"3333333333333\")\n    if (((_request$data = request.data) === null || _request$data === void 0 ? void 0 : _request$data.loggedin_by) === '') {\n      toast.success(\"Registration Successfully\");\n    }\n    return request;\n  }).catch(error => {\n    if (error.response.status === 400) {\n      toast.error(\"Email already exists\");\n    } else if (error.response.status === 401) {\n      HandleLogout();\n    } else {\n      toast.error(\"User added failed\");\n    }\n    return error;\n  });\n};\n_c = HandleRegister;\nexport const HandleLogin = async reqData => {\n  return await axios({\n    method: \"POST\",\n    url: `${API.login}`,\n    data: reqData,\n    headers: authHeader()\n  }).then(request => {\n    return request;\n  }).catch(error => {\n    if (error.response.status === 400) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 404) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 401) {\n      HandleLogout();\n    } else {\n      toast.error(\"User added failed\");\n    }\n    return error;\n  });\n};\n_c2 = HandleLogin;\nexport const HandleLoginByGoogle = async reqData => {\n  return await axios({\n    method: \"GET\",\n    url: `https://www.googleapis.com/oauth2/v1/userinfo?access_token=${reqData.access_token}`,\n    data: reqData,\n    headers: {\n      Authorization: `Bearer ${reqData.access_token}`,\n      Accept: 'application/json'\n    }\n  }).then(request => {\n    return request;\n  }).catch(error => {\n    if (error.response.status === 400) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 404) {\n      toast.error(error.response.data);\n    } else {\n      toast.error(\"Google login failed\");\n    }\n    return error;\n  });\n};\n_c3 = HandleLoginByGoogle;\nexport const HandleLogout = () => {\n  googleLogout();\n  localStorage.clear();\n  window.location.replace(\"/login\");\n  GenerateToken();\n};\n_c4 = HandleLogout;\nexport const GenerateToken = async () => {\n  return await axios({\n    method: \"GET\",\n    url: `${API.authToken}`\n  }).then(request => {\n    localStorage.setItem(\"authToken\", request.data.authToken);\n  }).catch(error => {\n    return error;\n  });\n};\n_c5 = GenerateToken;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"HandleRegister\");\n$RefreshReg$(_c2, \"HandleLogin\");\n$RefreshReg$(_c3, \"HandleLoginByGoogle\");\n$RefreshReg$(_c4, \"HandleLogout\");\n$RefreshReg$(_c5, \"GenerateToken\");","map":{"version":3,"names":["axios","toast","googleLogout","authHeader","API","HandleRegister","reqData","method","url","register","data","headers","then","request","_request$data","loggedin_by","success","catch","error","response","status","HandleLogout","_c","HandleLogin","login","_c2","HandleLoginByGoogle","access_token","Authorization","Accept","_c3","localStorage","clear","window","location","replace","GenerateToken","_c4","authToken","setItem","_c5","$RefreshReg$"],"sources":["/home/devendra/my-form-app/src/components/APIs/Auth/auth.js"],"sourcesContent":["import axios from \"axios\"\nimport { toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { googleLogout } from \"@react-oauth/google\";\nimport { authHeader } from \"../../../common/authTokens\";\nimport { API } from \"../../Config/config\";\n\n\nexport const HandleRegister = async(reqData) =>{\n  return await axios({\n    method: \"POST\",\n    url: `${API.register}`,\n    data: reqData,\n    headers: authHeader(),\n  }).then((request) => {\n    // toast.success(\"User added\")\n    // console.log(request,\"3333333333333\")\n    if(request.data?.loggedin_by === ''){\n      toast.success(\"Registration Successfully\")\n    }\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 400){\n        toast.error(\"Email already exists\")\n      }else if(error.response.status === 401){\n        HandleLogout()\n      }else{\n        toast.error(\"User added failed\")\n      }\n      return error;\n    })\n}\n\nexport const HandleLogin = async(reqData) =>{\n  return await axios({\n    method: \"POST\",\n    url: `${API.login}`,\n    data: reqData,\n    headers: authHeader(),\n  }).then((request) => {\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 400){\n        toast.error(error.response.data)\n      }else if(error.response.status === 404){\n        toast.error(error.response.data)\n      }else if(error.response.status === 401){\n        HandleLogout()\n      }else{\n        toast.error(\"User added failed\")\n      }\n      return error;\n    })\n}\n\nexport const HandleLoginByGoogle = async(reqData) =>{\n  return await axios({\n    method: \"GET\",\n    url: `https://www.googleapis.com/oauth2/v1/userinfo?access_token=${reqData.access_token}`,\n    data: reqData,\n    headers: {\n      Authorization: `Bearer ${reqData.access_token}`,\n      Accept: 'application/json'\n  },\n  }).then((request) => {\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 400){\n        toast.error(error.response.data)\n      }else if(error.response.status === 404){\n        toast.error(error.response.data)\n      }else{\n        toast.error(\"Google login failed\")\n      }\n      return error;\n    })\n}\n\nexport const HandleLogout = () => {\n  googleLogout()\n  localStorage.clear()\n  window.location.replace(\"/login\");\n  GenerateToken() \n\n};\n\nexport const GenerateToken = async() =>{\n  return await axios({\n        method: \"GET\",\n        url: `${API.authToken}`,\n      }).then((request) => {\n        localStorage.setItem(\"authToken\", request.data.authToken)\n      }).catch((error) => {\n        return error;\n      })\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}