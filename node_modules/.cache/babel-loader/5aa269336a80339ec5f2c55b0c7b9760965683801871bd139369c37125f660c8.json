{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { googleLogout } from \"@react-oauth/google\";\nimport { authHeader } from \"../../../common/authTokens\";\nimport { API } from \"../../Config/config\";\nexport const GenerateToken = async () => {\n  return await axios({\n    method: \"GET\",\n    url: `${API.authToken}`\n  }).then(request => {\n    localStorage.setItem(\"authToken\", request.data.authToken);\n  }).catch(error => {\n    return error;\n  });\n};\n_c = GenerateToken;\nexport const HandleRegister = async reqData => {\n  return await axios({\n    method: \"POST\",\n    url: `${API.register}`,\n    data: reqData,\n    headers: authHeader()\n  }).then(request => {\n    var _request$data;\n    toast.success(\"Registration Successfully\");\n    if (((_request$data = request.data) === null || _request$data === void 0 ? void 0 : _request$data.loggedin_by) === '') {\n      toast.success(\"Registration Successfully\");\n    }\n    return request;\n  }).catch(error => {\n    if (error.response.status === 400) {\n      toast.error(\"Email already exists\");\n    } else if (error.response.status === 401) {\n      HandleLogout();\n    } else {\n      toast.error(\"User added failed\");\n    }\n    return error;\n  });\n};\n_c2 = HandleRegister;\nexport const HandleLogin = async reqData => {\n  return await axios({\n    method: \"POST\",\n    url: `${API.login}`,\n    data: reqData,\n    headers: authHeader()\n  }).then(request => {\n    return request;\n  }).catch(error => {\n    if (error.response.status === 400) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 404) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 401) {\n      HandleLogout();\n    } else {\n      toast.error(\"User added failed\");\n    }\n    return error;\n  });\n};\n_c3 = HandleLogin;\nexport const HandleLoginByGoogle = async reqData => {\n  return await axios({\n    method: \"GET\",\n    url: `${process.env.NEXT_PUBLIC_GOOGLE_RESPONSE_API_URL}${reqData.access_token}`,\n    data: reqData,\n    headers: {\n      Authorization: `Bearer ${reqData.access_token}`,\n      Accept: 'application/json'\n    }\n  }).then(request => {\n    return request;\n  }).catch(error => {\n    if (error.response.status === 400) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 404) {\n      toast.error(error.response.data);\n    } else {\n      toast.error(\"Google login failed\");\n    }\n    return error;\n  });\n};\n_c4 = HandleLoginByGoogle;\nexport const HandleForgotPassword = async reqData => {\n  return await axios({\n    method: \"POST\",\n    url: `${API.forgotPassword}`,\n    data: reqData,\n    headers: authHeader()\n  }).then(request => {\n    if (request.status === 200) {\n      toast.success(\"Check your mail\");\n      localStorage.setItem('forgotPasswordToken', request.data);\n    }\n    return request;\n  }).catch(error => {\n    if (error.response.status === 400) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 404) {\n      toast.error(error.response.data);\n    } else if (error.response.status === 401) {\n      HandleLogout();\n    } else {\n      toast.error(\"Failed to send mail\");\n    }\n    return error;\n  });\n};\n_c5 = HandleForgotPassword;\nexport const HandleResetPassword = async reqData => {\n  return await axios({\n    method: \"POST\",\n    url: `${API.resetPassword}`,\n    data: reqData,\n    headers: authHeader()\n  }).then(request => {\n    toast.success(\"Password changed\");\n    return request;\n  }).catch(error => {\n    if (error.response.status === 401) {\n      HandleLogout();\n    } else {\n      toast.error(\"Failed to reset password\");\n    }\n    return error;\n  });\n};\n_c6 = HandleResetPassword;\nexport const HandleLogout = () => {\n  googleLogout();\n  localStorage.clear();\n  window.location.replace(\"/login\");\n  GenerateToken();\n};\n_c7 = HandleLogout;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"GenerateToken\");\n$RefreshReg$(_c2, \"HandleRegister\");\n$RefreshReg$(_c3, \"HandleLogin\");\n$RefreshReg$(_c4, \"HandleLoginByGoogle\");\n$RefreshReg$(_c5, \"HandleForgotPassword\");\n$RefreshReg$(_c6, \"HandleResetPassword\");\n$RefreshReg$(_c7, \"HandleLogout\");","map":{"version":3,"names":["axios","toast","googleLogout","authHeader","API","GenerateToken","method","url","authToken","then","request","localStorage","setItem","data","catch","error","_c","HandleRegister","reqData","register","headers","_request$data","success","loggedin_by","response","status","HandleLogout","_c2","HandleLogin","login","_c3","HandleLoginByGoogle","process","env","NEXT_PUBLIC_GOOGLE_RESPONSE_API_URL","access_token","Authorization","Accept","_c4","HandleForgotPassword","forgotPassword","_c5","HandleResetPassword","resetPassword","_c6","clear","window","location","replace","_c7","$RefreshReg$"],"sources":["/home/devendra/my-form-app/src/components/APIs/Auth/auth.js"],"sourcesContent":["import axios from \"axios\"\nimport { toast } from \"react-toastify\"\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { googleLogout } from \"@react-oauth/google\";\nimport { authHeader } from \"../../../common/authTokens\";\nimport { API } from \"../../Config/config\";\n\nexport const GenerateToken = async() =>{\n  return await axios({\n        method: \"GET\",\n        url: `${API.authToken}`,\n      }).then((request) => {\n        localStorage.setItem(\"authToken\", request.data.authToken)\n      }).catch((error) => {\n        return error;\n      })\n}\n\nexport const HandleRegister = async(reqData) =>{\n  return await axios({\n    method: \"POST\",\n    url: `${API.register}`,\n    data: reqData,\n    headers: authHeader(),\n  }).then((request) => {\n    toast.success(\"Registration Successfully\")\n    if(request.data?.loggedin_by === ''){\n      toast.success(\"Registration Successfully\")\n    }\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 400){\n        toast.error(\"Email already exists\")\n      }else if(error.response.status === 401){\n        HandleLogout()\n      }else{\n        toast.error(\"User added failed\")\n      }\n      return error;\n    })\n}\n\nexport const HandleLogin = async(reqData) =>{\n  return await axios({\n    method: \"POST\",\n    url: `${API.login}`,\n    data: reqData,\n    headers: authHeader(),\n  }).then((request) => {\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 400){\n        toast.error(error.response.data)\n      }else if(error.response.status === 404){\n        toast.error(error.response.data)\n      }else if(error.response.status === 401){\n        HandleLogout()\n      }else{\n        toast.error(\"User added failed\")\n      }\n      return error;\n    })\n}\n\nexport const HandleLoginByGoogle = async(reqData) =>{\n  return await axios({\n    method: \"GET\",\n    url: `${process.env.NEXT_PUBLIC_GOOGLE_RESPONSE_API_URL}${reqData.access_token}`,\n    data: reqData,\n    headers: {\n      Authorization: `Bearer ${reqData.access_token}`,\n      Accept: 'application/json'\n  },\n  }).then((request) => {\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 400){\n        toast.error(error.response.data)\n      }else if(error.response.status === 404){\n        toast.error(error.response.data)\n      }else{\n        toast.error(\"Google login failed\")\n      }\n      return error;\n    })\n}\n\nexport const HandleForgotPassword = async(reqData) =>{ \n  return await axios({\n    method: \"POST\",\n    url: `${API.forgotPassword}`,\n    data: reqData,\n    headers: authHeader(),\n  }).then((request) => {\n    if(request.status === 200){\n      toast.success(\"Check your mail\");\n      localStorage.setItem('forgotPasswordToken',request.data)\n    }\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 400){\n        toast.error(error.response.data)\n      }else if(error.response.status === 404){\n        toast.error(error.response.data)\n      }else if(error.response.status === 401){\n        HandleLogout()\n      }else{\n        toast.error(\"Failed to send mail\")\n      }\n      return error;\n    })\n}\n\nexport const HandleResetPassword = async(reqData) =>{\n  return await axios({\n    method: \"POST\",\n    url: `${API.resetPassword}`,\n    data: reqData,\n    headers: authHeader(),\n  }).then((request) => {\n      toast.success(\"Password changed\");\n      return request;\n    }).catch((error) => {\n      if(error.response.status === 401){\n        HandleLogout()\n      }else{\n        toast.error(\"Failed to reset password\")\n      }\n      return error;\n    })\n}\n\nexport const HandleLogout = () => {\n  googleLogout()\n  localStorage.clear()\n  window.location.replace(\"/login\");\n  GenerateToken()\n\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}