[{"/home/devendra/my-form-app/src/index.js":"1","/home/devendra/my-form-app/src/App.js":"2","/home/devendra/my-form-app/src/reportWebVitals.js":"3","/home/devendra/my-form-app/src/components/Register/index.js":"4","/home/devendra/my-form-app/src/components/Login/index.js":"5","/home/devendra/my-form-app/src/components/Profile/index.js":"6","/home/devendra/my-form-app/src/components/Register/validation.js":"7","/home/devendra/my-form-app/src/components/Login/validation.js":"8","/home/devendra/my-form-app/src/components/APIs/Auth/auth.js":"9","/home/devendra/my-form-app/src/common/authTokens.js":"10","/home/devendra/my-form-app/src/components/Config/config.js":"11"},{"size":623,"mtime":1688995997914,"results":"12","hashOfConfig":"13"},{"size":1176,"mtime":1689064513184,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1688729511729,"results":"15","hashOfConfig":"13"},{"size":6697,"mtime":1689057943244,"results":"16","hashOfConfig":"13"},{"size":6136,"mtime":1689065950233,"results":"17","hashOfConfig":"13"},{"size":414,"mtime":1689063119969,"results":"18","hashOfConfig":"13"},{"size":1643,"mtime":1689051538857,"results":"19","hashOfConfig":"13"},{"size":772,"mtime":1689052036845,"results":"20","hashOfConfig":"13"},{"size":2562,"mtime":1689064177837,"results":"21","hashOfConfig":"13"},{"size":680,"mtime":1689055114776,"results":"22","hashOfConfig":"13"},{"size":579,"mtime":1689054469198,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},"vh8qyj",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/devendra/my-form-app/src/index.js",["65"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n  <GoogleOAuthProvider\n    clientId='961757958534-kdhk0jnf06tkrrmqbesasnt84pl1nd7r.apps.googleusercontent.com'>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </GoogleOAuthProvider>\n\n\n);\n\nreportWebVitals();",[],"/home/devendra/my-form-app/src/App.js",["66","67","68","69","70"],[],"import './App.css';\nimport React, { Component, useEffect } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Route, Redirect, Routes, Router, } from \"react-router-dom\";\nimport RegisterForm from './components/Register';\nimport LoginForm from './components/Login';\nimport Profile from './components/Profile';\nimport { useNavigate } from 'react-router-dom';\nimport { GenerateToken } from './components/APIs/Auth/auth';\nexport default function App() {\n\n\n\n\n\n\n  useEffect(() => {\n    GenerateToken();\n    // if (isAuthenticated) {\n    //   console.log(\"isAuthenticatedisAuthenticated\", isAuthenticated)\n    //   window.location = (\"/profile\")\n    // }else{\n    //   console.log(\"elseeeee\")\n    //   // window.location = (\"/profile\")\n    // }\n  }, [])\n\n  return (\n\n    <Routes>\n      {/* <Route path=\"/register\" component={RegisterForm} /> */}\n      <Route exact path='/register' element={<RegisterForm />} />\n      <Route exact path='/login' element={<LoginForm />} />\n      <Route exact path='/profile' element={<Profile />} />\n      {/* <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/logout\" component={Logout} /> */}\n    </Routes>\n\n  )\n}\n","/home/devendra/my-form-app/src/reportWebVitals.js",[],[],"/home/devendra/my-form-app/src/components/Register/index.js",["71","72"],[],"import { useState,useRef } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from 'react-router-dom';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { userRegisterValidations } from './validation';\nimport { HandleRegister } from '../APIs/Auth/auth';\nimport { ToastContainer } from \"react-toastify\";\n\nexport default function RegisterForm() {\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(userRegisterValidations) });\n\n  const onSubmit = async(event) => {\n    setLoading(true);\n    await HandleRegister(event)\n      .then((res) => {\n        if (res.status === 201) {\n          setTimeout(() => {\n            navigate('/login');\n          }, 1000);\n        }\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  };\n\n  function ErrorShowing(errorMessage) {\n    return (\n      <p class=\"text-[#ff0000]\">\n        {errorMessage}{\" \"}\n      </p>\n    );\n  }\n  return (\n    <div className=\"isolate bg-white px-6 py-24 sm:py-32 lg:px-8\">\n      <div\n        className=\"absolute inset-x-0 top-[-10rem] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[-20rem]\"\n        aria-hidden=\"true\"\n      >\n        <div\n          className=\"relative left-1/2 -z-10 aspect-[1155/678] w-[36.125rem] max-w-none -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%-40rem)] sm:w-[72.1875rem]\"\n          style={{\n            clipPath:\n              'polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)',\n          }}\n        />\n      </div>\n      <div className=\"mx-auto max-w-2xl text-center\">\n        <h2 className=\"text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl\">Registration form</h2>\n\n      </div>\n      <form onSubmit={handleSubmit(onSubmit)} method=\"POST\" className=\"mx-auto mt-16 max-w-xl sm:mt-20\">\n        <div className=\"grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2\">\n          <div>\n            <label htmlFor=\"first_name\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\n              First name\n            </label>\n            <div className=\"mt-2.5\">\n              <input\n                type=\"text\"\n                {...register(\"first_name\")}\n                id=\"first_name\"\n                autoComplete=\"given-name\"\n                className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n              {errors && errors.first_name\n                ? ErrorShowing(errors?.first_name?.message)\n                : \"\"}\n            </div>\n          </div>\n          <div>\n            <label htmlFor=\"last_name\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\n              Last name\n            </label>\n            <div className=\"mt-2.5\">\n              <input\n                type=\"text\"\n                {...register(\"last_name\")}\n                id=\"last_name\"\n                autoComplete=\"family-name\"\n                className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n              {errors && errors.last_name\n                ? ErrorShowing(errors?.last_name?.message)\n                : \"\"}\n            </div>\n          </div>\n\n          <div className=\"sm:col-span-2\">\n            <label htmlFor=\"email\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\n              Email\n            </label>\n            <div className=\"mt-2.5\">\n              <input\n                type=\"email\"\n                {...register(\"email\")}\n                id=\"email\"\n                autoComplete=\"email\"\n                className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n              {errors && errors.email\n                ? ErrorShowing(errors?.email?.message)\n                : \"\"}\n            </div>\n          </div>\n\n          <div className=\"sm:col-span-2\">\n            <label htmlFor=\"email\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\n              Password\n            </label>\n            <div className=\"mt-2.5\">\n              <input\n                type=\"password\"\n                {...register(\"password\")}\n                id=\"password\"\n                autoComplete=\"current-password\"\n                className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n              {errors && errors.password\n                ? ErrorShowing(errors?.password?.message)\n                : \"\"}\n            </div>\n          </div>\n\n          <div className=\"sm:col-span-2\">\n            <label htmlFor=\"email\" className=\"block text-sm font-semibold leading-6 text-gray-900\">\n              Confirm Password\n            </label>\n            <div className=\"mt-2.5\">\n              <input\n                type=\"password\"\n                {...register(\"confirm_password\")}\n                id=\"confirm_password\"\n                autoComplete=\"current-password\"\n                className=\"block w-full rounded-md border-0 px-3.5 py-2 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n              />\n              {errors && errors.confirm_password\n                ? ErrorShowing(errors?.confirm_password?.message)\n                : \"\"}\n            </div>\n          </div>\n\n        </div>\n        <div className=\"mt-10\">\n          <button\n            onSubmit={handleSubmit}\n            type=\"submit\"\n            className=\"block w-full rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          >\n            Submit\n          </button>\n        </div>\n      </form>\n      <ToastContainer />\n    </div>\n  )\n\n}\n\n\n","/home/devendra/my-form-app/src/components/Login/index.js",["73","74","75","76"],[],"import { useForm } from \"react-hook-form\";\nimport { useState,useRef } from \"react\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useGoogleLogin, useGoogleOneTapLogin } from \"@react-oauth/google\";\nimport { useNavigate } from 'react-router-dom';\nimport { userLoginValidations } from \"./validation\";\nimport { HandleLogin, HandleLoginByGoogle, HandleRegister } from \"../APIs/Auth/auth\";\nimport { ToastContainer } from \"react-toastify\";\n\nexport default function LoginForm() {\n  const [loading, setLoading] = useState(false);\n  const [googleLoading, setGoogleLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(userLoginValidations) });\n\n  const onSubmit = async(event) => {\n    setLoading(true);\n    await HandleLogin(event)\n      .then((res) => {\n        if (res.status === 200) {\n          navigate('/profile');\n\n          localStorage.setItem(\"loginToken\", res.data.loginToken);\n          localStorage.setItem(\n            \"userData\",\n            JSON.stringify(res.data.userDetails)\n          );\n        }\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  };\n\n  function ErrorShowing(errorMessage) {\n    return (\n      <p class=\"text-[#ff0000]\">\n        {errorMessage}{\" \"}\n      </p>\n    );\n  }\n  \n  const googleLogin = useGoogleLogin({\n    onSuccess: async (tokenResponse) => {\n      await HandleLoginByGoogle(tokenResponse)\n        .then(async (res) => {\n          console.log('dataa',res)\n          const reqData = {\n            first_name: res.data.given_name,\n            last_name: res.data.family_name,\n            profile_pic: res.data.picture,\n            email: res.data.email,\n            loggedin_by: \"google\",\n          };\n          setGoogleLoading(true);\n          await HandleRegister(reqData)\n            .then((res) => {\n              if (res.status === 201) {\n                localStorage.setItem(\"loginToken\", res.data.loginToken);\n                localStorage.setItem(\n                  \"userData\",\n                  JSON.stringify(res?.data?.updatedUser ? res?.data?.updatedUser : res?.data?.user\n                  )\n                );\n                navigate(\"/profile\");\n              }\n              setGoogleLoading(false);\n            })\n            .catch(() => {\n              setGoogleLoading(false);\n            });\n        })\n        .catch((err) => console.log(err));\n    },\n    onError: (errorResponse) => console.log(errorResponse),\n  });\n\n  const twitterLogin = () =>{\n    console.log(\"Twitter Login\")\n  }\n\n\n  return (\n    <>\n      <div className=\"flex min-h-full flex-1 flex-col justify-center px-6 py-12 lg:px-8\">\n        <div className=\"sm:mx-auto sm:w-full sm:max-w-sm\">\n          <img\n            className=\"mx-auto h-10 w-auto\"\n            src=\"https://tailwindui.com/img/logos/mark.svg?color=indigo&shade=600\"\n            alt=\"Your Company\"\n          />\n          <h2 className=\"mt-10 text-center text-2xl font-bold leading-9 tracking-tight text-gray-900\">\n            Sign in to your account\n          </h2>\n        </div>\n\n        <div className=\"mt-10 sm:mx-auto sm:w-full sm:max-w-sm\">\n          <form onSubmit={handleSubmit(onSubmit)} method=\"POST\" className=\"space-y-6\">\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Email\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"email\"\n                  {...register(\"email\")}\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n                  {errors && errors.email\n                ? ErrorShowing(errors?.email?.message)\n                : \"\"}\n              </div>\n            </div>\n\n            <div>\n              <div className=\"flex items-center justify-between\">\n                <label htmlFor=\"password\" className=\"block text-sm font-medium leading-6 text-gray-900\">\n                  Password\n                </label>\n                {/* <div className=\"text-sm\">\n                  <a href=\"#\" className=\"font-semibold text-indigo-600 hover:text-indigo-500\">\n                    Forgot password?\n                  </a>\n                </div> */}\n              </div>\n              <div className=\"mt-2\">\n                <input\n                  id=\"password\"\n                  {...register(\"password\")}\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n                    {errors && errors.password\n                ? ErrorShowing(errors?.password?.message)\n                : \"\"}\n              </div>\n            </div>\n\n            <div>\n              <button\n                onSubmit={handleSubmit}\n                type=\"submit\"\n                className=\"flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n              >\n                Sign in\n              </button>\n            </div>\n          </form>\n\n          <p className=\"mt-10 text-center text-sm text-gray-500\">\n            <button onClick={() => googleLogin()}>Continue with google</button>\n          </p>\n\n          <p className=\"mt-10 text-center text-sm text-gray-500\">\n            <button onClick={() => twitterLogin()}>Continue with twitter</button>\n          </p>\n\n\n        </div>\n        <ToastContainer />\n      </div>\n\n    </>\n  )\n}\n","/home/devendra/my-form-app/src/components/Profile/index.js",["77"],[],"import React, { useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const logoutUser = () => {\n    navigate('/register');\n    console.log(\"logout user\");\n  }\n\n  return (\n      <div>\n        <h1>Profile</h1>\n        <button onClick={logoutUser}>\n          Log out\n        </button>\n      </div>\n    \n  );\n};\n\nexport default Profile;","/home/devendra/my-form-app/src/components/Register/validation.js",["78","79","80","81","82"],[],"import * as Yup from \"yup\";\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[ -\\/:-@\\[-\\`{-~]).{8,}$/;\nconst emailRules = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const userRegisterValidations = Yup.object({\n    first_name: \n        Yup.string().required('First name is a required field')\n        .min(3,\"First name must be at least 3 characters\")\n        .matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\n    last_name: \n        Yup.string().required('Last name is a required field')\n        .min(3,\"Last name must be at least 3 characters\")\n        .matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\n    email: \n        Yup.string().required('Email is a required field')\n        .matches(emailRules,\"Email must be a valid email\")\n        .email(\"Email must be a valid email\"),\n    password: \n        Yup.string().required('Password is a required field')\n        .min(8,'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special character')\n        .matches(passwordRules, { message: \"Password must have at least one of each: uppercase, lowercase, number and special character\" }),\n    confirm_password: \n        Yup.string().required('Confirm password is a required field')\n        .min(8,'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special character')\n        .matches(passwordRules, { message: \"Password must have at least one of each: uppercase, lowercase, number and special character\" })\n        .oneOf([Yup.ref(\"password\"), ''], \"Passwords must match\")\n        .required(\"Required\"),\n  });","/home/devendra/my-form-app/src/components/Login/validation.js",["83","84","85","86","87"],[],"import * as Yup from \"yup\";\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[ -\\/:-@\\[-\\`{-~]).{8,}$/;\nconst emailRules = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nexport const userLoginValidations = Yup.object({\n    email: \n        Yup.string().required('Email is a required field')\n        .matches(emailRules,\"Email must be a valid email\")\n        .email(\"Email must be a valid email\"),\n    password: \n        Yup.string().required('Password is a required field')\n        .min(8,'Password must contain 8 or more characters with at least one of each: uppercase, lowercase, number and special character')\n        .matches(passwordRules, { message: \"Password must have at least one of each: uppercase, lowercase, number and special character\" }),\n  });","/home/devendra/my-form-app/src/components/APIs/Auth/auth.js",[],[],"/home/devendra/my-form-app/src/common/authTokens.js",[],[],"/home/devendra/my-form-app/src/components/Config/config.js",[],[],{"ruleId":"88","severity":1,"message":"89","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":2,"column":17,"nodeType":"90","messageId":"91","endLine":2,"endColumn":26},{"ruleId":"88","severity":1,"message":"93","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":18},{"ruleId":"88","severity":1,"message":"94","line":4,"column":17,"nodeType":"90","messageId":"91","endLine":4,"endColumn":25},{"ruleId":"88","severity":1,"message":"95","line":4,"column":35,"nodeType":"90","messageId":"91","endLine":4,"endColumn":41},{"ruleId":"88","severity":1,"message":"96","line":8,"column":10,"nodeType":"90","messageId":"91","endLine":8,"endColumn":21},{"ruleId":"88","severity":1,"message":"97","line":1,"column":19,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"98","line":10,"column":10,"nodeType":"90","messageId":"91","endLine":10,"endColumn":17},{"ruleId":"88","severity":1,"message":"97","line":2,"column":19,"nodeType":"90","messageId":"91","endLine":2,"endColumn":25},{"ruleId":"88","severity":1,"message":"99","line":4,"column":26,"nodeType":"90","messageId":"91","endLine":4,"endColumn":46},{"ruleId":"88","severity":1,"message":"98","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":17},{"ruleId":"88","severity":1,"message":"100","line":12,"column":10,"nodeType":"90","messageId":"91","endLine":12,"endColumn":23},{"ruleId":"88","severity":1,"message":"101","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":3,"column":63,"nodeType":"104","messageId":"105","endLine":3,"endColumn":64,"suggestions":"106"},{"ruleId":"102","severity":1,"message":"107","line":3,"column":68,"nodeType":"104","messageId":"105","endLine":3,"endColumn":69,"suggestions":"108"},{"ruleId":"102","severity":1,"message":"109","line":3,"column":71,"nodeType":"104","messageId":"105","endLine":3,"endColumn":72,"suggestions":"110"},{"ruleId":"102","severity":1,"message":"111","line":4,"column":27,"nodeType":"104","messageId":"105","endLine":4,"endColumn":28,"suggestions":"112"},{"ruleId":"102","severity":1,"message":"111","line":4,"column":43,"nodeType":"104","messageId":"105","endLine":4,"endColumn":44,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"103","line":3,"column":63,"nodeType":"104","messageId":"105","endLine":3,"endColumn":64,"suggestions":"114"},{"ruleId":"102","severity":1,"message":"107","line":3,"column":68,"nodeType":"104","messageId":"105","endLine":3,"endColumn":69,"suggestions":"115"},{"ruleId":"102","severity":1,"message":"109","line":3,"column":71,"nodeType":"104","messageId":"105","endLine":3,"endColumn":72,"suggestions":"116"},{"ruleId":"102","severity":1,"message":"111","line":4,"column":27,"nodeType":"104","messageId":"105","endLine":4,"endColumn":28,"suggestions":"117"},{"ruleId":"102","severity":1,"message":"111","line":4,"column":43,"nodeType":"104","messageId":"105","endLine":4,"endColumn":44,"suggestions":"118"},"no-unused-vars","'Auth0Provider' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","'useAuth0' is defined but never used.","'Redirect' is defined but never used.","'Router' is defined but never used.","'useNavigate' is defined but never used.","'useRef' is defined but never used.","'loading' is assigned a value but never used.","'useGoogleOneTapLogin' is defined but never used.","'googleLoading' is assigned a value but never used.","'useEffect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["119","120"],"Unnecessary escape character: \\[.",["121","122"],"Unnecessary escape character: \\`.",["123","124"],"Unnecessary escape character: \\..",["125","126"],["127","128"],["129","130"],["131","132"],["133","134"],["135","136"],["137","138"],{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},{"messageId":"139","fix":"145","desc":"141"},{"messageId":"142","fix":"146","desc":"144"},{"messageId":"139","fix":"147","desc":"141"},{"messageId":"142","fix":"148","desc":"144"},{"messageId":"139","fix":"149","desc":"141"},{"messageId":"142","fix":"150","desc":"144"},{"messageId":"139","fix":"151","desc":"141"},{"messageId":"142","fix":"152","desc":"144"},{"messageId":"139","fix":"153","desc":"141"},{"messageId":"142","fix":"154","desc":"144"},{"messageId":"139","fix":"155","desc":"141"},{"messageId":"142","fix":"156","desc":"144"},{"messageId":"139","fix":"157","desc":"141"},{"messageId":"142","fix":"158","desc":"144"},{"messageId":"139","fix":"159","desc":"141"},{"messageId":"142","fix":"160","desc":"144"},{"messageId":"139","fix":"161","desc":"141"},{"messageId":"142","fix":"162","desc":"144"},"removeEscape",{"range":"163","text":"164"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"165","text":"166"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"167","text":"164"},{"range":"168","text":"166"},{"range":"169","text":"164"},{"range":"170","text":"166"},{"range":"171","text":"164"},{"range":"172","text":"166"},{"range":"173","text":"164"},{"range":"174","text":"166"},{"range":"175","text":"164"},{"range":"176","text":"166"},{"range":"177","text":"164"},{"range":"178","text":"166"},{"range":"179","text":"164"},{"range":"180","text":"166"},{"range":"181","text":"164"},{"range":"182","text":"166"},{"range":"183","text":"164"},{"range":"184","text":"166"},[91,92],"",[91,91],"\\",[96,97],[96,96],[99,100],[99,99],[141,142],[141,141],[157,158],[157,157],[91,92],[91,91],[96,97],[96,96],[99,100],[99,99],[141,142],[141,141],[157,158],[157,157]]